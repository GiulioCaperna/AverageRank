##Code to compute the method proposed by Rainer Br√ºggemann
##References used: #1, #2 and #4 (Of the list presented in the Readme file

library(parsec)

RLPOMext=function(data){
  obs_strings<-apply(X = data,MARGIN = 1,FUN = toString)
  labels=gsub(", ", "", obs_strings)
  ranks_list=rep(NA,length(labels))
  set_profiles=pop2prof(data,sep="")
  classes_freq=set_profiles$freq
  Z_lpom=getzeta(set_profiles)
  list_prof=names(classes_freq)
  avrank=rep(NA,length(list_prof)) 
  incomparables=incomp(Z_lpom)
  for (g in 1:length(list_prof)){
    down_x=list_prof[downset(Z_lpom,g)]
    up_x=list_prof[upset(Z_lpom,g)]
    height=length(down_x)
    incom_x=list_prof[incomparables[g,]]
    freq_incom_x=classes_freq[incomparables[g,]]
    if (length(incom_x)>0){
      for (j in 1:length(incom_x)){
        incom_y=list_prof[incomparables[incom_x[j],]]
        pi_d= length(intersect(incom_y,down_x))
        pi_u= length(intersect(incom_y,up_x))
        effect= (pi_d/(pi_d+pi_u))
        height=height+effect}}
    quali_unit=which(labels==list_prof[g])
    ranks_list[quali_unit]=height
  }
  names(ranks_list)=labels
  return(ranks_list)
}
